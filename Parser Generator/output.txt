int
id
,
id
,
id
,
id
;
while
(
id
relop
num
)
{
id
assign
id
addop
num
;
}

0

 METHOD_BODY = STATEMENT_LIST 
METHOD_BODY
STATEMENT_LIST
1

 STATEMENT_LIST = STATEMENT | STATEMENT_LIST STATEMENT 
STATEMENT_LIST
STATEMENT
STATEMENT_LIST
2
STATEMENT_LIST
STATEMENT
3

 STATEMENT = DECLARATION | IF | WHILE | ASSIGNMENT 
STATEMENT
DECLARATION
STATEMENT
4
IF
STATEMENT
5
WHILE
STATEMENT
6
ASSIGNMENT
7

 DECLARATION = PRIMITIVE_TYPE 'id' ';' 
DECLARATION
PRIMITIVE_TYPE
id
;
8

 PRIMITIVE_TYPE = 'int' | 'float' 
PRIMITIVE_TYPE
int
PRIMITIVE_TYPE
9
float
10

 IF = 'if' '(' EXPRESSION ')' '{' STATEMENT '}' 'else' '{' STATEMENT '}' 
IF
if
(
EXPRESSION
)
{
STATEMENT
}
else
{
STATEMENT
}
11

 WHILE = 'while' '(' EXPRESSION ')' '{' STATEMENT '}' 
WHILE
while
(
EXPRESSION
)
{
STATEMENT
}
12

 ASSIGNMENT = 'id' '=' EXPRESSION ';' 
ASSIGNMENT
id
=
EXPRESSION
;
13

 EXPRESSION = SIMPLE_EXPRESSION | SIMPLE_EXPRESSION 'relop' SIMPLE_EXPRESSION 
EXPRESSION
SIMPLE_EXPRESSION
EXPRESSION
14
SIMPLE_EXPRESSION
relop
SIMPLE_EXPRESSION
15

 SIMPLE_EXPRESSION = TERM | SIGN TERM | SIMPLE_EXPRESSION 'addop' TERM 
SIMPLE_EXPRESSION
TERM
SIMPLE_EXPRESSION
16
SIGN
TERM
SIMPLE_EXPRESSION
17
SIMPLE_EXPRESSION
addop
TERM
18

 TERM = FACTOR | TERM 'mulop' FACTOR 
TERM
FACTOR
TERM
19
TERM
mulop
FACTOR
20

 FACTOR = 'id' | 'num' | '(' EXPRESSION ')' 
FACTOR
id
FACTOR
21
num
FACTOR
22
(
EXPRESSION
)
23

 SIGN = '+' | '-'   
SIGN
+
SIGN
24
-
25

131
2
2
4
4
4
4
1
2
2
1
1
1
2
2
3
3
3
2
2
3
3
3
2
2
